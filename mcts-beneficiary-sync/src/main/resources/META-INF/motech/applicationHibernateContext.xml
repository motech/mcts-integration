<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="allDomainEntities"
		class="org.springframework.beans.factory.config.ListFactoryBean">
		<property name="sourceList">
			<list>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsPregnantMotherErrorLog</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsPregnantMother</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsPregnantMotherServiceUpdate</value>
				<value>org.motechproject.mcts.integration.hibernate.model.ChildCase</value>
				<value>org.motechproject.mcts.integration.hibernate.model.Flw</value>
				<value>org.motechproject.mcts.integration.hibernate.model.FlwGroup</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MotherCase</value>
				<value>org.motechproject.mcts.integration.hibernate.model.LocationDimension</value>
				<value>org.motechproject.mcts.integration.hibernate.model.BpForm</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsState</value>
			    <value>org.motechproject.mcts.integration.hibernate.model.MctsDistrict</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsTaluk</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsPhc</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsVillage</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsHealthworker</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsHealthblock</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsSubcenter</value>
				<value>org.motechproject.mcts.integration.hibernate.model.HubTransaction</value>
				<value>org.motechproject.mcts.integration.hibernate.model.AwwRegisterMotherForm</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MotherEditForm</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MotherCaseMctsUpdate</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsHealthworkerErrorLog</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MctsLocationErrorLog</value>
				<!-- <value>org.motechproject.mcts.integration.hibernate.model.MctsPregnantMotherMatchStatusLookup</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MotherCaseMctsAuthorizedStatusLookup</value> -->
				<value>org.motechproject.mcts.integration.hibernate.model.DontKnowForm</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MapExistingForm</value>
				<value>org.motechproject.mcts.integration.hibernate.model.MappingToApproveForm</value>
				<value>org.motechproject.mcts.integration.hibernate.model.UnapprovedToDiscussForm</value>
				<value>org.motechproject.mcts.integration.hibernate.model.UnmappedToReviewForm</value>
				<value>org.motechproject.mcts.integration.hibernate.model.CaseAlreadyClosedForm</value>
			</list>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />

		<property name="annotatedClasses" ref="allDomainEntities" />

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
            	<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>
